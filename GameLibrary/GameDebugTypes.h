enum debug_type {
    Debug_Type_bool,
    Debug_Type_char,
    Debug_Type_string,
    Debug_Type_int8,
    Debug_Type_int16,
    Debug_Type_int,
    Debug_Type_int32,
    Debug_Type_int64,
    Debug_Type_uint8,
    Debug_Type_uint16,
    Debug_Type_uint32,
    Debug_Type_uint64,
    Debug_Type_memory_index,
    Debug_Type_float,
    Debug_Type_double,
    Debug_Type_v2,
    Debug_Type_v3,
    Debug_Type_v4,
    Debug_Type_scale,
    Debug_Type_quaternion,
    Debug_Type_color,
    Debug_Type_collider,
    Debug_Type_memory_arena,
    Debug_Type_game_animation_id,
    Debug_Type_game_mesh_id,
    Debug_Type_game_bitmap_id,
    Debug_Type_game_entity_type,
    Debug_Type_enemy_type,
    Debug_Type_weapon_type,
    Debug_Type_character_action_id,
    Debug_Type_transform,
    Debug_Type_segment3,
    Debug_Type_game_animation,
    Debug_Type_game_animator,
    Debug_Type_bone,
    Debug_Type_armature,
    Debug_Type_game_entity,
    Debug_Type_stats,
    Debug_Type_enemy,
    Debug_Type_weapon,
    Debug_Type_character_action,
    Debug_Type_character,
};

bool IsEnumType(debug_type Type) { return Type > 22 && Type < 30; }
bool IsStructType(debug_type Type) { return Type > 29 && Type < 42; }

struct debug_enum_value {
    debug_type EnumType;
    char* Identifier;
    int Value;
};

const int ENUM_VALUES_SIZE = 37;
debug_enum_value EnumValues[ENUM_VALUES_SIZE] = {
    {Debug_Type_game_animation_id, "Animation_Idle_ID", 0},
    {Debug_Type_game_animation_id, "Animation_Walk_ID", 1},
    {Debug_Type_game_animation_id, "Animation_Jump_ID", 2},
    {Debug_Type_game_animation_id, "Animation_Attack_ID", 3},
    {Debug_Type_game_animation_id, "game_animation_id_count", 4},
    {Debug_Type_game_mesh_id, "Mesh_Horns_ID", 0},
    {Debug_Type_game_mesh_id, "Mesh_Dog_ID", 1},
    {Debug_Type_game_mesh_id, "Mesh_Sphere_ID", 2},
    {Debug_Type_game_mesh_id, "Mesh_Body_ID", 3},
    {Debug_Type_game_mesh_id, "Mesh_Shield_ID", 4},
    {Debug_Type_game_mesh_id, "Mesh_Sword_ID", 5},
    {Debug_Type_game_mesh_id, "Mesh_Selector_ID", 6},
    {Debug_Type_game_mesh_id, "Mesh_Dyno_ID", 7},
    {Debug_Type_game_mesh_id, "game_mesh_id_count", 8},
    {Debug_Type_game_bitmap_id, "Bitmap_Background_ID", 0},
    {Debug_Type_game_bitmap_id, "Bitmap_Button_ID", 1},
    {Debug_Type_game_bitmap_id, "Bitmap_Empty_ID", 2},
    {Debug_Type_game_bitmap_id, "Bitmap_Enemy_ID", 3},
    {Debug_Type_game_bitmap_id, "Bitmap_Player_ID", 4},
    {Debug_Type_game_bitmap_id, "game_bitmap_id_count", 5},
    {Debug_Type_game_entity_type, "Entity_Type_Character", 0},
    {Debug_Type_game_entity_type, "Entity_Type_Enemy", 1},
    {Debug_Type_game_entity_type, "Entity_Type_Camera", 2},
    {Debug_Type_game_entity_type, "Entity_Type_Prop", 3},
    {Debug_Type_game_entity_type, "Entity_Type_Weapon", 4},
    {Debug_Type_game_entity_type, "game_entity_type_count", 5},
    {Debug_Type_enemy_type, "Enemy_Type_Horns", 0},
    {Debug_Type_enemy_type, "Enemy_Type_Dog", 1},
    {Debug_Type_enemy_type, "Enemy_Type_Dyno", 2},
    {Debug_Type_enemy_type, "enemy_type_count", 3},
    {Debug_Type_weapon_type, "Weapon_Sword", 0},
    {Debug_Type_weapon_type, "Weapon_Shield", 1},
    {Debug_Type_weapon_type, "weapon_type_count", 2},
    {Debug_Type_character_action_id, "Character_Action_Idle_ID", 0},
    {Debug_Type_character_action_id, "Character_Action_Walk_ID", 1},
    {Debug_Type_character_action_id, "Character_Action_Jump_ID", 2},
    {Debug_Type_character_action_id, "Character_Action_Attack_ID", 3},
};

struct debug_struct_member {
    char* Name;
    debug_type StructType;
    debug_type MemberType;
    uint64 Size;
    uint64 Offset;
    int ArraySize;
    bool IsPointer;
};

const int STRUCT_MEMBERS_SIZE = 58;
debug_struct_member StructMembers[STRUCT_MEMBERS_SIZE] = {
    {"Translation", Debug_Type_transform, Debug_Type_v3, sizeof(v3), (uint64)(&((transform*)0)->Translation),0, false},
    {"Scale", Debug_Type_transform, Debug_Type_scale, sizeof(scale), (uint64)(&((transform*)0)->Scale),0, false},
    {"Rotation", Debug_Type_transform, Debug_Type_quaternion, sizeof(quaternion), (uint64)(&((transform*)0)->Rotation),0, false},
    {"Head", Debug_Type_segment3, Debug_Type_v3, sizeof(v3), (uint64)(&((segment3*)0)->Head),0, false},
    {"Tail", Debug_Type_segment3, Debug_Type_v3, sizeof(v3), (uint64)(&((segment3*)0)->Tail),0, false},
    {"ID", Debug_Type_game_animation, Debug_Type_game_animation_id, sizeof(game_animation_id), (uint64)(&((game_animation*)0)->ID),0, false},
    {"nFrames", Debug_Type_game_animation, Debug_Type_uint32, sizeof(uint32), (uint64)(&((game_animation*)0)->nFrames),0, false},
    {"nBones", Debug_Type_game_animation, Debug_Type_uint32, sizeof(uint32), (uint64)(&((game_animation*)0)->nBones),0, false},
    {"Content", Debug_Type_game_animation, Debug_Type_float, sizeof(float), (uint64)(&((game_animation*)0)->Content),0, true},
    {"Animation", Debug_Type_game_animator, Debug_Type_game_animation, sizeof(game_animation), (uint64)(&((game_animator*)0)->Animation),0, true},
    {"Armature", Debug_Type_game_animator, Debug_Type_armature, sizeof(armature), (uint64)(&((game_animator*)0)->Armature),0, true},
    {"CurrentFrame", Debug_Type_game_animator, Debug_Type_uint32, sizeof(uint32), (uint64)(&((game_animator*)0)->CurrentFrame),0, false},
    {"Active", Debug_Type_game_animator, Debug_Type_bool, sizeof(bool), (uint64)(&((game_animator*)0)->Active),0, false},
    {"Loop", Debug_Type_game_animator, Debug_Type_bool, sizeof(bool), (uint64)(&((game_animator*)0)->Loop),0, false},
    {"ID", Debug_Type_bone, Debug_Type_int, sizeof(int), (uint64)(&((bone*)0)->ID),0, false},
    {"Name", Debug_Type_bone, Debug_Type_string, sizeof(char), (uint64)(&((bone*)0)->Name),0, false},
    {"Segment", Debug_Type_bone, Debug_Type_segment3, sizeof(segment3), (uint64)(&((bone*)0)->Segment),0, false},
    {"Transform", Debug_Type_bone, Debug_Type_transform, sizeof(transform), (uint64)(&((bone*)0)->Transform),0, false},
    {"nBones", Debug_Type_armature, Debug_Type_uint32, sizeof(uint32), (uint64)(&((armature*)0)->nBones),0, false},
    {"Bones", Debug_Type_armature, Debug_Type_bone, sizeof(bone), (uint64)(&((armature*)0)->Bones),32, false},
    {"Name", Debug_Type_game_entity, Debug_Type_string, sizeof(char), (uint64)(&((game_entity*)0)->Name),0, false},
    {"ID", Debug_Type_game_entity, Debug_Type_int, sizeof(int), (uint64)(&((game_entity*)0)->ID),0, false},
    {"Parent", Debug_Type_game_entity, Debug_Type_game_entity, sizeof(game_entity), (uint64)(&((game_entity*)0)->Parent),0, true},
    {"Index", Debug_Type_game_entity, Debug_Type_int, sizeof(int), (uint64)(&((game_entity*)0)->Index),0, false},
    {"Type", Debug_Type_game_entity, Debug_Type_game_entity_type, sizeof(game_entity_type), (uint64)(&((game_entity*)0)->Type),0, false},
    {"Transform", Debug_Type_game_entity, Debug_Type_transform, sizeof(transform), (uint64)(&((game_entity*)0)->Transform),0, false},
    {"Velocity", Debug_Type_game_entity, Debug_Type_v3, sizeof(v3), (uint64)(&((game_entity*)0)->Velocity),0, false},
    {"Collider", Debug_Type_game_entity, Debug_Type_collider, sizeof(collider), (uint64)(&((game_entity*)0)->Collider),0, false},
    {"Collided", Debug_Type_game_entity, Debug_Type_bool, sizeof(bool), (uint64)(&((game_entity*)0)->Collided),0, false},
    {"Active", Debug_Type_game_entity, Debug_Type_bool, sizeof(bool), (uint64)(&((game_entity*)0)->Active),0, false},
    {"Hovered", Debug_Type_game_entity, Debug_Type_bool, sizeof(bool), (uint64)(&((game_entity*)0)->Hovered),0, false},
    {"HP", Debug_Type_stats, Debug_Type_uint32, sizeof(uint32), (uint64)(&((stats*)0)->HP),0, false},
    {"MaxHP", Debug_Type_stats, Debug_Type_uint32, sizeof(uint32), (uint64)(&((stats*)0)->MaxHP),0, false},
    {"Strength", Debug_Type_stats, Debug_Type_uint32, sizeof(uint32), (uint64)(&((stats*)0)->Strength),0, false},
    {"Defense", Debug_Type_stats, Debug_Type_uint32, sizeof(uint32), (uint64)(&((stats*)0)->Defense),0, false},
    {"Intelligence", Debug_Type_stats, Debug_Type_uint32, sizeof(uint32), (uint64)(&((stats*)0)->Intelligence),0, false},
    {"Wisdom", Debug_Type_stats, Debug_Type_uint32, sizeof(uint32), (uint64)(&((stats*)0)->Wisdom),0, false},
    {"Speed", Debug_Type_stats, Debug_Type_float, sizeof(float), (uint64)(&((stats*)0)->Speed),0, false},
    {"Precission", Debug_Type_stats, Debug_Type_float, sizeof(float), (uint64)(&((stats*)0)->Precission),0, false},
    {"Entity", Debug_Type_enemy, Debug_Type_game_entity, sizeof(game_entity), (uint64)(&((enemy*)0)->Entity),0, true},
    {"Stats", Debug_Type_enemy, Debug_Type_stats, sizeof(stats), (uint64)(&((enemy*)0)->Stats),0, false},
    {"Type", Debug_Type_enemy, Debug_Type_enemy_type, sizeof(enemy_type), (uint64)(&((enemy*)0)->Type),0, false},
    {"MeshID", Debug_Type_enemy, Debug_Type_game_mesh_id, sizeof(game_mesh_id), (uint64)(&((enemy*)0)->MeshID),0, false},
    {"TextureID", Debug_Type_enemy, Debug_Type_game_bitmap_id, sizeof(game_bitmap_id), (uint64)(&((enemy*)0)->TextureID),0, false},
    {"Type", Debug_Type_weapon, Debug_Type_weapon_type, sizeof(weapon_type), (uint64)(&((weapon*)0)->Type),0, false},
    {"Color", Debug_Type_weapon, Debug_Type_color, sizeof(color), (uint64)(&((weapon*)0)->Color),0, false},
    {"Entity", Debug_Type_weapon, Debug_Type_game_entity, sizeof(game_entity), (uint64)(&((weapon*)0)->Entity),0, true},
    {"ParentBone", Debug_Type_weapon, Debug_Type_int, sizeof(int), (uint64)(&((weapon*)0)->ParentBone),0, false},
    {"ID", Debug_Type_character_action, Debug_Type_character_action_id, sizeof(character_action_id), (uint64)(&((character_action*)0)->ID),0, false},
    {"AnimationID", Debug_Type_character_action, Debug_Type_game_animation_id, sizeof(game_animation_id), (uint64)(&((character_action*)0)->AnimationID),0, false},
    {"Loop", Debug_Type_character_action, Debug_Type_bool, sizeof(bool), (uint64)(&((character_action*)0)->Loop),0, false},
    {"Armature", Debug_Type_character, Debug_Type_armature, sizeof(armature), (uint64)(&((character*)0)->Armature),0, false},
    {"Stats", Debug_Type_character, Debug_Type_stats, sizeof(stats), (uint64)(&((character*)0)->Stats),0, false},
    {"Animator", Debug_Type_character, Debug_Type_game_animator, sizeof(game_animator), (uint64)(&((character*)0)->Animator),0, false},
    {"Entity", Debug_Type_character, Debug_Type_game_entity, sizeof(game_entity), (uint64)(&((character*)0)->Entity),0, true},
    {"LeftHand", Debug_Type_character, Debug_Type_weapon, sizeof(weapon), (uint64)(&((character*)0)->LeftHand),0, true},
    {"RightHand", Debug_Type_character, Debug_Type_weapon, sizeof(weapon), (uint64)(&((character*)0)->RightHand),0, true},
    {"Action", Debug_Type_character, Debug_Type_character_action, sizeof(character_action), (uint64)(&((character*)0)->Action),0, false},
};
